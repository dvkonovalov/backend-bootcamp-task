name: ci.yml

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build server
        run: go build -o myapp cmd/main.go

      - name: Start server
        run: |
          ./myapp &
          echo $! > server.pid
        env:
          DB_USER: user
          DB_PASSWORD: password
          DB_NAME: testdb
          DB_HOST: localhost
          DB_PORT: 5432

        continue-on-error: true
        timeout-minutes: 1

      - name: Run tests
        env:
          DB_USER: user
          DB_PASSWORD: password
          DB_NAME: testdb
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          go test -v -coverprofile=coverage.out -covermode=atomic ./tests/... 
          goveralls -coverprofile=coverage.out -service=github 

      - name: Stop server
        run: kill $(cat server.pid)
        if: always()

      - name: Upload coverage to Coveralls
        if: success()
        uses: coverallsapp/github-action@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          run: goveralls -coverprofile=coverage.out -service=github
